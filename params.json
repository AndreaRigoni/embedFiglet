{"name":"Embedfiglet","tagline":"C++ embeddable subset of Figlet","body":"embedFiglet is a C++ library which implement a \r\nsubset of Figlet capability (http://www.figlet.org).\r\nNo configuration or font file are necessary.\r\nThe fonts are stored in structure initalized at compile time.\r\n\r\nDetails\r\n-------\r\n\r\nThis library implement a subset of Figlet capability, i.e.\r\nprint large letters out of ordinary text\r\n \r\n~~~~~~~~~~~~~\r\n   _ _ _          _   _     _\r\n  | (_) | _____  | |_| |__ (_)___\r\n  | | | |/ / _ \\ | __| '_ \\| / __|\r\n  | | |   <  __/ | |_| | | | \\__ \\_\r\n  |_|_|_|\\_\\___|  \\__|_| |_|_|___(_)\r\n \r\n~~~~~~~~~~~~~\r\n \r\nDifferently of standard FIGlet command (http://www.figlet.org/)\r\nthis print can be done inside a user program using run time\r\ngenerated string as follows\r\n  \r\n~~~~~~~~~~~~~\r\n#include \"Figlet.hh\"\r\n#include <sstream>\r\nusing namespace std ;\r\n\r\nint\r\nmain() {\r\n  Figlet::standard.print(\"Fractions\") ;\r\n  for ( int i = 2 ; i <= 4 ; ++i ) {\r\n    ostringstream ss ;\r\n    ss << \"5/\" << i << \" = \" << 5.0/i ;\r\n    Figlet::small.print(ss.str().c_str()) ;\r\n  }\r\n  cout << \"ALL DONE!\\n\" ;\r\n  return 0;\r\n}\r\n~~~~~~~~~~~~~\r\n  \r\nwhich output is the following\r\n  \r\n~~~~~~~~~~~~~\r\n   _____               _   _\r\n  |  ___| __ __ _  ___| |_(_) ___  _ __  ___\r\n  | |_ | '__/ _` |/ __| __| |/ _ \\| '_ \\/ __|\r\n  |  _|| | | (_| | (__| |_| | (_) | | | \\__ \\\r\n  |_|  |_|  \\__,_|\\___|\\__|_|\\___/|_| |_|___/\r\n                                           \r\n   ___   _____         ___   ___   \r\n  | __| / /_  )  ___  |_  ) | __|\r\n  |__ \\/ / / /  |___|  / / _|__ \\\r\n  |___/_/ /___| |___| /___(_)___/\r\n                               \r\n   ___   ______        _    __  __  __  ______\r\n  | __| / /__ /  ___  / |  / / / / / / / /__  |\r\n  |__ \\/ / |_ \\ |___| | |_/ _ Y _ Y _ Y _ \\/ /\r\n  |___/_/ |___/ |___| |_(_)___|___|___|___/_/\r\n                                             \r\n   ___   ___ _          _   ___ ___\r\n  | __| / / | |   ___  / | |_  ) __|\r\n  |__ \\/ /|_  _| |___| | |_ / /|__ \\\r\n  |___/_/   |_|  |___| |_(_)___|___/\r\n~~~~~~~~~~~~~\r\n\r\nNo initialization files are necessary. The fonts are\r\nhardware embedded in the library. \r\nThe available fonts are:\r\n\r\n  - banner\r\n  - big\r\n  - doom\r\n  - larry3d\r\n  - mini\r\n  - script\r\n  - small\r\n  - standard\r\n  - straight\r\n  \r\nA simple ruby script permits to convert figlet .flf files\r\nto structures which can be embedded in the library.\r\n \r\nAvailable printing mode\r\n-----------------------\r\n \r\nOnly four mode of print the same string:\r\n\r\n - FIGLET_SMUSHED     standard way of figlet print\r\n - FIGLET_PACKED      letters are moved left but no overlapping are permitted\r\n - FIGLET_FULLWIDTH   letters are printed at width defined in the font\r\n - FIGLET_MONOSPACED  letters are printed with equal width\r\n\r\nThe effect are the following\r\n\r\n~~~~~~~~~~~~~~~~~~\r\n   ____                      _              _\r\n  / ___| _ __ ___  _   _ ___| |__   ___  __| |\r\n  \\___ \\| '_ ` _ \\| | | / __| '_ \\ / _ \\/ _` |\r\n   ___) | | | | | | |_| \\__ \\ | | |  __/ (_| |\r\n  |____/|_| |_| |_|\\__,_|___/_| |_|\\___|\\__,_|\r\n   ____               _              _\r\n  |  _ \\  __ _   ___ | | __ ___   __| |\r\n  | |_) |/ _` | / __|| |/ // _ \\ / _` |\r\n  |  __/| (_| || (__ |   <|  __/| (_| |\r\n  |_|    \\__,_| \\___||_|\\_\\\\___| \\__,_|\r\n   _____           _   _  __        __  _       _   _     _\r\n  |  ___|  _   _  | | | | \\ \\      / / (_)   __| | | |_  | |__\r\n  | |_    | | | | | | | |  \\ \\ /\\ / /  | |  / _` | | __| | '_ \\\r\n  |  _|   | |_| | | | | |   \\ V  V /   | | | (_| | | |_  | | | |\r\n  |_|      \\__,_| |_| |_|    \\_/\\_/    |_|  \\__,_|  \\__| |_| |_|\r\n   __  __                                                                       _\r\n  |  \\/  |   ___    _ __     ___     ___    _ __     __ _     ___     ___    __| |\r\n  | |\\/| |  / _ \\  | '_ \\   / _ \\   / __|  | '_ \\   / _` |   / __|   / _ \\  / _` |\r\n  | |  | | | (_) | | | | | | (_) |  \\__ \\  | |_) | | (_| |  | (__   |  __/ | (_| |\r\n  |_|  |_|  \\___/  |_| |_|  \\___/   |___/  | .__/   \\__,_|   \\___|   \\___|  \\__,_|\r\n                                           |_|\r\n~~~~~~~~~~~~~~~~~~\r\n\r\nAvailable framing mode\r\n----------------------\r\n \r\nOnly two framing are available:\r\n \r\n - FIGLET_SINGLE  single frame around a string\r\n - FIGLET_DOUBLE  double frame around a string\r\n \r\nThe effect are the following\r\n\r\n\r\n~~~~~~~~~~~~~~~~~~\r\n  Figlet::small.printFramed(\"SINGLE\",cout,Figlet::FIGLET_SINGLE);\r\n  +------------------------------+\r\n  |  ___ ___ _  _  ___ _    ___  |\r\n  | / __|_ _| \\| |/ __| |  | __| |\r\n  | \\__ \\| || .` | (_ | |__| _|  |\r\n  | |___/___|_|\\_|\\___|____|___| |\r\n  |                              |\r\n  +------------------------------+\r\n~~~~~~~~~~~~~~~~~~\r\n\r\nand\r\n \r\n~~~~~~~~~~~~~~~~~~\r\n  Figlet::small.printFramed(\"DOUBLE\",cout,Figlet::FIGLET_DOUBLE);\r\n  @=================================@\r\n  #  ___   ___  _   _ ___ _    ___  #\r\n  # |   \\ / _ \\| | | | _ ) |  | __| #\r\n  # | |) | (_) | |_| | _ \\ |__| _|  #\r\n  # |___/ \\___/ \\___/|___/____|___| #\r\n  #                                 #\r\n  @=================================@\r\n~~~~~~~~~~~~~~~~~~\r\n\r\nCompile and test\r\n----------------\r\n\r\n------------------\r\n\r\nTo compile the test do:\r\n\r\nmake\r\n\r\nTo run the test\r\n\r\nmake run\r\n\r\n-----------------\r\n\r\n  Enrico Bertolazzi\r\n  Dipartimento di Ingegneria Industriale\r\n  Universita` degli Studi di Trento\r\n  enrico.bertolazzi@unitn.it\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}